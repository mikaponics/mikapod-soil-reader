// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/reader.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PollSensorsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PollSensorsRequest) Reset()         { *m = PollSensorsRequest{} }
func (m *PollSensorsRequest) String() string { return proto.CompactTextString(m) }
func (*PollSensorsRequest) ProtoMessage()    {}
func (*PollSensorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d68806bd2ba4ed74, []int{0}
}

func (m *PollSensorsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PollSensorsRequest.Unmarshal(m, b)
}
func (m *PollSensorsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PollSensorsRequest.Marshal(b, m, deterministic)
}
func (m *PollSensorsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PollSensorsRequest.Merge(m, src)
}
func (m *PollSensorsRequest) XXX_Size() int {
	return xxx_messageInfo_PollSensorsRequest.Size(m)
}
func (m *PollSensorsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PollSensorsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PollSensorsRequest proto.InternalMessageInfo

type SensorsDataResponse struct {
	Status                 bool                 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Timestamp              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	HumidityValue          float32              `protobuf:"fixed32,3,opt,name=humidityValue,proto3" json:"humidityValue,omitempty"`
	HumidityUnit           string               `protobuf:"bytes,4,opt,name=humidityUnit,proto3" json:"humidityUnit,omitempty"`
	TemperatureValue       float32              `protobuf:"fixed32,5,opt,name=temperatureValue,proto3" json:"temperatureValue,omitempty"`
	TemperatureUnit        string               `protobuf:"bytes,6,opt,name=temperatureUnit,proto3" json:"temperatureUnit,omitempty"`
	PressureValue          float32              `protobuf:"fixed32,7,opt,name=pressureValue,proto3" json:"pressureValue,omitempty"`
	PressureUnit           string               `protobuf:"bytes,8,opt,name=pressureUnit,proto3" json:"pressureUnit,omitempty"`
	TemperatureBackupValue float32              `protobuf:"fixed32,9,opt,name=temperatureBackupValue,proto3" json:"temperatureBackupValue,omitempty"`
	TemperatureBackupUnit  string               `protobuf:"bytes,10,opt,name=temperatureBackupUnit,proto3" json:"temperatureBackupUnit,omitempty"`
	AltitudeValue          float32              `protobuf:"fixed32,11,opt,name=altitudeValue,proto3" json:"altitudeValue,omitempty"`
	AltitudeUnit           string               `protobuf:"bytes,12,opt,name=altitudeUnit,proto3" json:"altitudeUnit,omitempty"`
	IlluminanceValue       float32              `protobuf:"fixed32,13,opt,name=illuminanceValue,proto3" json:"illuminanceValue,omitempty"`
	IlluminanceUnit        string               `protobuf:"bytes,14,opt,name=illuminanceUnit,proto3" json:"illuminanceUnit,omitempty"`
	SoilMoistureValue      float32              `protobuf:"fixed32,15,opt,name=soilMoistureValue,proto3" json:"soilMoistureValue,omitempty"`
	SoilMoistureUnit       string               `protobuf:"bytes,16,opt,name=soilMoistureUnit,proto3" json:"soilMoistureUnit,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}             `json:"-"`
	XXX_unrecognized       []byte               `json:"-"`
	XXX_sizecache          int32                `json:"-"`
}

func (m *SensorsDataResponse) Reset()         { *m = SensorsDataResponse{} }
func (m *SensorsDataResponse) String() string { return proto.CompactTextString(m) }
func (*SensorsDataResponse) ProtoMessage()    {}
func (*SensorsDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d68806bd2ba4ed74, []int{1}
}

func (m *SensorsDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SensorsDataResponse.Unmarshal(m, b)
}
func (m *SensorsDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SensorsDataResponse.Marshal(b, m, deterministic)
}
func (m *SensorsDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SensorsDataResponse.Merge(m, src)
}
func (m *SensorsDataResponse) XXX_Size() int {
	return xxx_messageInfo_SensorsDataResponse.Size(m)
}
func (m *SensorsDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SensorsDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SensorsDataResponse proto.InternalMessageInfo

func (m *SensorsDataResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *SensorsDataResponse) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *SensorsDataResponse) GetHumidityValue() float32 {
	if m != nil {
		return m.HumidityValue
	}
	return 0
}

func (m *SensorsDataResponse) GetHumidityUnit() string {
	if m != nil {
		return m.HumidityUnit
	}
	return ""
}

func (m *SensorsDataResponse) GetTemperatureValue() float32 {
	if m != nil {
		return m.TemperatureValue
	}
	return 0
}

func (m *SensorsDataResponse) GetTemperatureUnit() string {
	if m != nil {
		return m.TemperatureUnit
	}
	return ""
}

func (m *SensorsDataResponse) GetPressureValue() float32 {
	if m != nil {
		return m.PressureValue
	}
	return 0
}

func (m *SensorsDataResponse) GetPressureUnit() string {
	if m != nil {
		return m.PressureUnit
	}
	return ""
}

func (m *SensorsDataResponse) GetTemperatureBackupValue() float32 {
	if m != nil {
		return m.TemperatureBackupValue
	}
	return 0
}

func (m *SensorsDataResponse) GetTemperatureBackupUnit() string {
	if m != nil {
		return m.TemperatureBackupUnit
	}
	return ""
}

func (m *SensorsDataResponse) GetAltitudeValue() float32 {
	if m != nil {
		return m.AltitudeValue
	}
	return 0
}

func (m *SensorsDataResponse) GetAltitudeUnit() string {
	if m != nil {
		return m.AltitudeUnit
	}
	return ""
}

func (m *SensorsDataResponse) GetIlluminanceValue() float32 {
	if m != nil {
		return m.IlluminanceValue
	}
	return 0
}

func (m *SensorsDataResponse) GetIlluminanceUnit() string {
	if m != nil {
		return m.IlluminanceUnit
	}
	return ""
}

func (m *SensorsDataResponse) GetSoilMoistureValue() float32 {
	if m != nil {
		return m.SoilMoistureValue
	}
	return 0
}

func (m *SensorsDataResponse) GetSoilMoistureUnit() string {
	if m != nil {
		return m.SoilMoistureUnit
	}
	return ""
}

func init() {
	proto.RegisterType((*PollSensorsRequest)(nil), "api.PollSensorsRequest")
	proto.RegisterType((*SensorsDataResponse)(nil), "api.SensorsDataResponse")
}

func init() { proto.RegisterFile("api/reader.proto", fileDescriptor_d68806bd2ba4ed74) }

var fileDescriptor_d68806bd2ba4ed74 = []byte{
	// 404 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0xcf, 0x8e, 0xd3, 0x30,
	0x10, 0x87, 0x49, 0x4b, 0xff, 0xb9, 0x2d, 0x6d, 0x0d, 0x94, 0xa8, 0x17, 0xa2, 0x88, 0x43, 0x84,
	0x50, 0x2a, 0x15, 0x84, 0x38, 0x71, 0x40, 0x48, 0x9c, 0x2a, 0xa1, 0x14, 0xb8, 0xbb, 0x8d, 0xe9,
	0x5a, 0x75, 0x62, 0x6f, 0x6c, 0x1f, 0xf6, 0xd1, 0xf6, 0xed, 0x56, 0x1e, 0x27, 0x6d, 0xd2, 0x74,
	0x8f, 0xf9, 0x66, 0xf4, 0xcd, 0x4f, 0x93, 0x31, 0x9a, 0x13, 0xc9, 0xd6, 0x05, 0x25, 0x29, 0x2d,
	0x62, 0x59, 0x08, 0x2d, 0x70, 0x97, 0x48, 0xb6, 0x7a, 0x7f, 0x14, 0xe2, 0xc8, 0xe9, 0x1a, 0xd0,
	0xde, 0xfc, 0x5f, 0x6b, 0x96, 0x51, 0xa5, 0x49, 0x26, 0x5d, 0x57, 0xf8, 0x06, 0xe1, 0xdf, 0x82,
	0xf3, 0x1d, 0xcd, 0x95, 0x28, 0x54, 0x42, 0xef, 0x0d, 0x55, 0x3a, 0x7c, 0xec, 0xa1, 0xd7, 0x25,
	0xfa, 0x49, 0x34, 0x49, 0xa8, 0x92, 0x22, 0x57, 0x14, 0x2f, 0x51, 0x5f, 0x69, 0xa2, 0x8d, 0xf2,
	0xbd, 0xc0, 0x8b, 0x86, 0x49, 0xf9, 0x85, 0xbf, 0xa1, 0xd1, 0x59, 0xec, 0x77, 0x02, 0x2f, 0x1a,
	0x6f, 0x56, 0xb1, 0x1b, 0x1d, 0x57, 0xa3, 0xe3, 0x3f, 0x55, 0x47, 0x72, 0x69, 0xc6, 0x1f, 0xd0,
	0xf4, 0xce, 0x64, 0x2c, 0x65, 0xfa, 0xe1, 0x1f, 0xe1, 0x86, 0xfa, 0xdd, 0xc0, 0x8b, 0x3a, 0x49,
	0x13, 0xe2, 0x10, 0x4d, 0x2a, 0xf0, 0x37, 0x67, 0xda, 0x7f, 0x19, 0x78, 0xd1, 0x28, 0x69, 0x30,
	0xfc, 0x11, 0xcd, 0x35, 0xcd, 0x24, 0x2d, 0x88, 0x36, 0x05, 0x75, 0xb2, 0x1e, 0xc8, 0x5a, 0x1c,
	0x47, 0x68, 0x56, 0x63, 0xa0, 0xec, 0x83, 0xf2, 0x1a, 0xdb, 0x7c, 0xb2, 0xa0, 0x4a, 0x9d, 0x95,
	0x03, 0x97, 0xaf, 0x01, 0x6d, 0xbe, 0x0a, 0x80, 0x6c, 0xe8, 0xf2, 0xd5, 0x19, 0xfe, 0x8a, 0x96,
	0x35, 0xf9, 0x0f, 0x72, 0x38, 0x19, 0xe9, 0x94, 0x23, 0x50, 0x3e, 0x53, 0xc5, 0x5f, 0xd0, 0xdb,
	0x56, 0x05, 0x86, 0x20, 0x18, 0x72, 0xbb, 0x68, 0x73, 0x13, 0xae, 0x99, 0x36, 0x69, 0x99, 0x7b,
	0xec, 0x72, 0x37, 0xa0, 0xcd, 0x5d, 0x01, 0x50, 0x4e, 0x5c, 0xee, 0x3a, 0xb3, 0x7b, 0x65, 0x9c,
	0x9b, 0x8c, 0xe5, 0x24, 0x3f, 0x94, 0xb2, 0xa9, 0xdb, 0xeb, 0x35, 0xb7, 0x7b, 0xad, 0x31, 0x50,
	0xbe, 0x72, 0x7b, 0xbd, 0xc2, 0xf8, 0x13, 0x5a, 0x28, 0xc1, 0xf8, 0x56, 0x30, 0x75, 0xf9, 0x5d,
	0x33, 0xd0, 0xb6, 0x0b, 0x36, 0x43, 0x1d, 0x82, 0x78, 0x0e, 0xe2, 0x16, 0xdf, 0xec, 0xd0, 0x62,
	0xcb, 0x4e, 0x44, 0x8a, 0x74, 0x27, 0x18, 0x4f, 0xe0, 0x49, 0xe0, 0xef, 0x68, 0xf0, 0x8b, 0x6a,
	0x7b, 0xcb, 0xf8, 0x5d, 0x4c, 0x24, 0x8b, 0xdb, 0x47, 0xbf, 0xf2, 0xa1, 0x70, 0xe3, 0xec, 0xc3,
	0x17, 0xfb, 0x3e, 0x5c, 0xf1, 0xe7, 0xa7, 0x00, 0x00, 0x00, 0xff, 0xff, 0x60, 0x7b, 0xd8, 0x57,
	0x67, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MikapodSoilReaderClient is the client API for MikapodSoilReader service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MikapodSoilReaderClient interface {
	GetData(ctx context.Context, in *PollSensorsRequest, opts ...grpc.CallOption) (*SensorsDataResponse, error)
}

type mikapodSoilReaderClient struct {
	cc *grpc.ClientConn
}

func NewMikapodSoilReaderClient(cc *grpc.ClientConn) MikapodSoilReaderClient {
	return &mikapodSoilReaderClient{cc}
}

func (c *mikapodSoilReaderClient) GetData(ctx context.Context, in *PollSensorsRequest, opts ...grpc.CallOption) (*SensorsDataResponse, error) {
	out := new(SensorsDataResponse)
	err := c.cc.Invoke(ctx, "/api.MikapodSoilReader/GetData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MikapodSoilReaderServer is the server API for MikapodSoilReader service.
type MikapodSoilReaderServer interface {
	GetData(context.Context, *PollSensorsRequest) (*SensorsDataResponse, error)
}

// UnimplementedMikapodSoilReaderServer can be embedded to have forward compatible implementations.
type UnimplementedMikapodSoilReaderServer struct {
}

func (*UnimplementedMikapodSoilReaderServer) GetData(ctx context.Context, req *PollSensorsRequest) (*SensorsDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetData not implemented")
}

func RegisterMikapodSoilReaderServer(s *grpc.Server, srv MikapodSoilReaderServer) {
	s.RegisterService(&_MikapodSoilReader_serviceDesc, srv)
}

func _MikapodSoilReader_GetData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PollSensorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MikapodSoilReaderServer).GetData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MikapodSoilReader/GetData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MikapodSoilReaderServer).GetData(ctx, req.(*PollSensorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MikapodSoilReader_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.MikapodSoilReader",
	HandlerType: (*MikapodSoilReaderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetData",
			Handler:    _MikapodSoilReader_GetData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/reader.proto",
}
